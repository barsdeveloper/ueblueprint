import IInputPinTemplate from "./IInputPinTemplate"
import Utility from "../Utility"

/** @typedef {import("../element/PinElement").default} PinElement */

export default class RealPinTemplate extends IInputPinTemplate {

    setInputs(values = [], updateDefaultValue = false) {
        if (!values || values.length == 0) {
            values = this.getInput()
        }
        let parsedValues = []
        for (let i = 0; i < values.length; ++i) {
            let num = parseFloat(values[i])
            if (isNaN(num)) {
                num = parseFloat(this.element.entity.DefaultValue != ""
                    ? /** @type {String} */(this.element.entity.DefaultValue)
                    : this.element.entity.AutogeneratedDefaultValue)
            }
            if (isNaN(num)) {
                num = 0
                updateDefaultValue = false
            }
            parsedValues.push(num)
            values[i] = Utility.minDecimals(num)
        }
        super.setInputs(values, false)
        this.setDefaultValue(parsedValues, values)
    }

    setDefaultValue(values = [], rawValues = values) {
        this.element.setDefaultValue(values[0])
    }
}
