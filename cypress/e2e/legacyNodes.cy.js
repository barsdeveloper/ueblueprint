/// <reference types="cypress" />

import { generateNodeTest } from "../fixtures/testUtilities.js"

const tests = [
    {
        name: "ROS Change Element",
        value: String.raw`
            Begin Object Class=K2Node_CallFunction Name="K2Node_CallFunction_131095"
                NodePosX=-5024
                NodePosY=-1888
                NodeGuid=CC44F0434996CC21484572A242E1F72D
                Begin Object Class=EdGraphPin Name="EdGraphPin_3991113"
                End Object
                Begin Object Class=EdGraphPin Name="EdGraphPin_3991114"
                End Object
                Begin Object Class=EdGraphPin Name="EdGraphPin_3991115"
                End Object
                Begin Object Class=EdGraphPin Name="EdGraphPin_3991116"
                End Object
                Begin Object Class=EdGraphPin Name="EdGraphPin_3991117"
                End Object
                Begin Object Class=EdGraphPin Name="EdGraphPin_3991118"
                End Object
                FunctionReference=(MemberParentClass=Class'/Script/ShooterGame.ShooterGameMode',MemberName="GetFloatOptionIni")
                Pins(0)=EdGraphPin'EdGraphPin_3991113'
                Pins(1)=EdGraphPin'EdGraphPin_3991114'
                Pins(2)=EdGraphPin'EdGraphPin_3991115'
                Pins(3)=EdGraphPin'EdGraphPin_3991116'
                Pins(4)=EdGraphPin'EdGraphPin_3991117'
                Pins(5)=EdGraphPin'EdGraphPin_3991118'
                ErrorType=1
                ErrorMsg="Error This blueprint (self) is not a ShooterGameMode, therefore \' Target \' must have a connection\nError This blueprint (self) is not a ShooterGameMode, therefore \' Target \' must have a connection"
                Begin Object Name="EdGraphPin_3991113"
                    PinName="execute"
                    PinType=(PinCategory="exec")
                    LinkedTo(0)=EdGraphPin'"K2Node_CallFunction_113214.EdGraphPin_3991579"'
                End Object
                Begin Object Name="EdGraphPin_3991114"
                    PinName="then"
                    Direction=EGPD_Output
                    PinType=(PinCategory="exec")
                    LinkedTo(0)=EdGraphPin'"K2Node_IfThenElse_7680.EdGraphPin_3991155"'
                End Object
                Begin Object Name="EdGraphPin_3991115"
                    PinName="self"
                    PinFriendlyName="Target"
                    PinToolTip="Target\nShooter Game Mode Reference"
                    PinType=(PinCategory="object",PinSubCategoryObject=Class'/Script/ShooterGame.ShooterGameMode')
                    LinkedTo(0)=EdGraphPin'"K2Node_DynamicCast_2126.EdGraphPin_3990988"'
                End Object
                Begin Object Name="EdGraphPin_3991116"
                    PinName="Section"
                    PinToolTip="Section\nString"
                    PinType=(PinCategory="string")
                    DefaultValue="CrazysDinosStats"
                End Object
                Begin Object Name="EdGraphPin_3991117"
                    PinName="OptionName"
                    PinToolTip="Option Name\nString"
                    PinType=(PinCategory="string")
                    DefaultValue="DinoStamina"
                End Object
                Begin Object Name="EdGraphPin_3991118"
                    PinName="ReturnValue"
                    PinToolTip="Return Value\nFloat"
                    Direction=EGPD_Output
                    PinType=(PinCategory="float")
                    DefaultValue="0.0"
                    AutogeneratedDefaultValue="0.0"
                    LinkedTo(0)=EdGraphPin'"K2Node_CallFunction_131096.EdGraphPin_3991132"'
                    LinkedTo(1)=EdGraphPin'"K2Node_CallFunction_131097.EdGraphPin_3991144"'
                    LinkedTo(2)=EdGraphPin'"K2Node_VariableSet_21447.EdGraphPin_3992243"'
                End Object
            End Object
        `,
        pins: 2,
        delegate: false,
        development: false,
    },
]

/** @type {Blueprint} */
let blueprint

before(() => {
    cy.visit(`http://127.0.0.1:${Cypress.env("UEBLUEPRINT_TEST_SERVER_PORT")}/empty.html`, {
        onLoad: () => {
            cy.get("ueb-blueprint")
                .then(b => blueprint = b[0])
                .click(100, 300)
        }
    })
})

tests.forEach(
    testObject => generateNodeTest(testObject, () => blueprint)
)
